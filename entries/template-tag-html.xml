<entry type="template-tag" name="{{html fieldNameOrExpression}}" plugin="jQuery Templates">
<download>
<p>This documentation topic concerns the <em> jQuery Templates</em> plugin (jquery-tmpl), which can be downloaded from: <a href="http://github.com/jquery/jquery-tmpl">http://github.com/jquery/jquery-tmpl</a>.</p>
</download>
<signature>
<added>1.4.3</added>
<argument name="fieldNameOrExpression" type="String, Object, Function">
<desc>The name of a field on the current data item, or a JavaScript function or expression, returning HTML markup.</desc>
</argument>
</signature>
<desc>Used for insertion of HTML markup strings in the rendered template. Evaluates the specified field on the current data item, or the specified JavaScript function or expression.</desc>

<longdesc>
<p>Note: For information about how to render templates, see <a href="http://api.jquery.com/tmpl">.tmpl()</a> and <a href="http://api.jquery.com/jquery.tmpl">jQuery.tmpl()</a>.
</p> 

<h4>Template Tags</h4>
<p>Template tags such as the <code>{{html}}</code> tag can be used within jQuery templates in addition to text and HTML markup, in order to enable a number of scenarios such as composition of templates, iteration over hierarchical data, parameterization of template rendering, etc. 
</p>
<p>
Other available tags include: <a href="http://api.jquery.com/template-tag-equal">${}</a>, <a href="http://api.jquery.com/template-tag-each">{{each}}</a>, <a href="http://api.jquery.com/template-tag-if">{{if}}</a>, <a href="http://api.jquery.com/template-tag-else">{{else}}</a>, <a href="http://api.jquery.com/template-tag-tmpl">{{tmpl}}</a> and <a href="http://api.jquery.com/template-tag-wrap">{{wrap}}</a>. User-defined template tags can also be specified, by extending the <code>jQuery.tmpl.tag</code> map.</p> 

<h4>Using the {{html}} Template Tag</h4>
<p>
The following example shows how to use <code>{{html}}</code> to insert markup from the <code>Synopsis</code> field of the data item into the rendered template.
</p>
<pre>&lt;script id="movieTemplate" type="text/x-jquery-tmpl"&gt;
    &lt;h4&gt;${Name}&lt;/h4&gt;
    &lt;p&gt;{{html Synopsis}}&lt;/p&gt;
&lt;/script&gt;
</pre>

<h4>HTML encoding</h4>
<p>
Using <code>{{html fieldNameOrExpression}}</code> is equivalent to using <code>${fieldNameOrExpression}</code>, except that it renders unencoded text into the HTML DOM, whereas <code>${}</code> encodes values by default. 
</p>

<h4>Evaluating Expressions and Functions, Using Template Variables</h4>
<p>
<code>{{html expression}}</code> can be used in a similar way to <code>${expression}</code>, to render markup returned by an expression or a function call, as in the following example:</p>
<h6>Template:</h6>
<pre>
&lt;p&gt;{{html $item.getSynopsis(true)}&lt;/p&gt;
</pre>
<h6>Code:</h6>
<pre>
// Render the template with the movie data
$( "#movieTemplate" ).tmpl( movie, { 
    getSynopsis: function( short ) {
        //return short or long synopsis
        //...
    }
}).appendTo( "#movieContainer" );
</pre>
<p>
See <a href="http://api.jquery.com/template-tag-equal">${}</a> for more detailed documentation and examples of using template tags in association with expression evaluation, function calls, template variables, etc. 
</p>

</longdesc>

<example>
<desc>Using <code>{{html}}</code> to insert markup from data.</desc>
<js src="http://code.jquery.com/jquery-latest.min.js" /> 
<js src="http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js" /> 
<code><![CDATA[
/* The Synopsis data field contains HTML markup. */
var movie = { 
    Name: "Meet Joe Black", 
    Synopsis: "The <span class='role'>grim reaper</span> (<a href='http://www.netflix.com/RoleDisplay/Brad_Pitt/73919'>Brad Pitt</a>) visits <span class='role'>Bill Parrish</span> (<a href='http://www.netflix.com/RoleDisplay/Anthony_Hopkins/43014'>Anthony Hopkins</a>)..."
};

/* Render the template with the movie data.
   The template uses the {{html}} template tag
   to  insert the Synopsis HTML markup data. */
$( "#movieTemplate" ).tmpl( movie )
    .appendTo( "#movieContainer" );
]]></code>
<css><![CDATA[
.role {font-weight:bold;font-style: italic;} #movieContainer {padding-left: 8px;}
]]></css>
<html><![CDATA[
<tmpl id="movieTemplate" type="text/x-jquery-tmpl"> 
    <h4>${Name}</h4>
    <p>{{html Synopsis}}</p>
</tmpl>

<div id="movieContainer"></div>
]]></html>
</example>
</entry>
