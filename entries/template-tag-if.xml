<entry type="template-tag" name="{{if fieldNameOrExpression}} content {{/if}}" plugin="jQuery Templates">
<download>
<p>This documentation topic concerns the <em> jQuery Templates</em> plugin (jquery-tmpl), which can be downloaded from: <a href="http://github.com/jquery/jquery-tmpl">http://github.com/jquery/jquery-tmpl</a>.</p>
</download>
<signature>
<added>1.4.3</added>
<argument name="fieldNameOrExpression" type="String, Object, Function">
<desc>The name of a field on the current data item, or a JavaScript function or expression to be evaluated.</desc>
</argument>
</signature>
<desc>Used for conditional insertion of content. Renders the content between the opening and closing template tags only if the specified data item field, JavaScript function or expression does not evaluate to false (or to zero, null, type "undefined", or the empty string ).</desc>

<longdesc>
<p>Note: For information about how to render templates, see <a href="http://api.jquery.com/tmpl">.tmpl()</a> and <a href="http://api.jquery.com/jquery.tmpl">jQuery.tmpl()</a>.
</p> 

<h4>Template Tags</h4>
<p>Template tags such as the <code>{{if}}</code> tag can be used within jQuery templates in addition to text and HTML markup, in order to enable a number of scenarios such as composition of templates, iteration over hierarchical data, parameterization of template rendering, etc. 
</p>
<p>
Other available tags include: <a href="http://api.jquery.com/template-tag-equal">${}</a>, <a href="http://api.jquery.com/template-tag-each">{{each}}</a>, <a href="http://api.jquery.com/template-tag-html">{{html}}</a>, <a href="http://api.jquery.com/template-tag-else">{{else}}</a>, <a href="http://api.jquery.com/template-tag-tmpl">{{tmpl}}</a> and <a href="http://api.jquery.com/template-tag-wrap">{{wrap}}</a>. User-defined template tags can also be specified, by extending the <code>jQuery.tmpl.tag</code> map.</p> 

<h4>Using the {{if}} Template Tag</h4>
<p>
The following example shows how to use <code>{{if}}</code> to insert conditional content, depending on whether the <code>Languages</code> field of the data item is defined (and is not null).
</p>
<h6>Template:</h6>
<pre>
&lt;li&gt;
    Title: ${Name}.
    {{if Languages}}
        (Alternative languages: ${Languages}).
    {{/if}}
&lt;/li&gt;
</pre>
<h6>Data:</h6>
<pre>
var movies = [
    { Name: "Meet Joe Black", Languages: "French" },
    { Name: "The Mighty" },
    { Name: "City Hunter", Languages: "Mandarin and Cantonese" }
];
</pre>

<h4>Evaluating Expressions and Functions, Using Template Variables</h4>
<p>
<code>{{if expression}}</code> can be used in a similar way to <code>${expression}</code>, to render conditionally based on the value returned by an expression or a function call, as in the following example:</p>
<h6>Template:</h6>
<pre>
&lt;li&gt;
    Title: ${Name}.
    {{if Languages.length}}
        (Alternative languages: ${$item.getLanguages(" - ")}).
    {{/if}}
&lt;/li&gt;
</pre>
<h6>Data:</h6>
<pre>
var movies = [
    { Name: "Meet Joe Black", Languages: ["French"] },
    { Name: "The Mighty", Languages: [] },
    { Name: "City Hunter", Languages: ["Mandarin", "Cantonese"] }
];
</pre>
<p>
See <a href="http://api.jquery.com/template-tag-equal">${}</a> for more detailed documentation and examples of using template tags in association with expression evaluation, function calls, template variables, etc. 
</p>

</longdesc>

<example>
<desc>Using <code>{{if}}</code> to render content conditionally, based on the value of an expression.</desc>
<js src="http://code.jquery.com/jquery-latest.min.js" /> 
<js src="http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js" /> 
<code><![CDATA[
var movies = [
    { Name: "Meet Joe Black", Languages: ["French"] },
    { Name: "The Mighty", Languages: [] },
    { Name: "City Hunter", Languages: ["Mandarin", "Cantonese"] }
];

/* Render the template with the movies data */
$( "#movieTemplate" ).tmpl( movies, { 
    getLanguages: function( separator ) {
        return this.data.Languages.join( separator );
    }
}).appendTo( "#movieList" );
]]></code>
<html><![CDATA[
<tmpl id="movieTemplate" type="text/x-jquery-tmpl"> 
    <li>
        Title: ${Name}.
        {{if Languages.length}}
            (Alternative languages: ${$item.getLanguages(" - ")}).
        {{/if}}
    </li>
</tmpl>

<ul id="movieList"></ul>
]]></html>
</example>

</entry>