<entry type='method' name="template" return="function" plugin="jQuery Templates">
<download>
<p>This documentation topic concerns the <em> jQuery Templates</em> plugin (jquery-tmpl), which can be downloaded from: <a href="http://github.com/jquery/jquery-tmpl">http://github.com/jquery/jquery-tmpl</a>.</p>
</download>
<signature>
<added>1.4.3</added>
<argument name="name" type="String" optional="true">
<desc>A string naming the compiled template.</desc>
</argument>
</signature>
<desc>Compile the contents of the matched element as a reusable compiled template.</desc> 

<longdesc>
<p>Note: For information about how to render templates, see <a href="http://api.jquery.com/tmpl">.tmpl()</a> and <a href="http://api.jquery.com/jquery.tmpl">jQuery.tmpl()</a>.</p>
<p>
This method returns a compiled template, created from the content of the first matched element. If the <code>name</code> parameter is provided the compiled template is stored as a named template, and can be referenced using the specified string.
</p>
<p>See also <a href="http://api.jquery.com/jquery.template">jQuery.template()</a>.</p>
<p>
<strong>Example:</strong> Create a compiled template associated with the name "summaryTemplate" and then reference it by name for rendering:
</p>
<pre>
&lt;script id="titleTemplate" type="text/x-jquery-tmpl"&gt;
  &lt;li&gt;${Name}&lt;/li&gt;
&lt;/script&gt;
___________

// Compile the inline template as a named template
$( "#titleTemplate" ).template( "summaryTemplate" );

function renderList() {
  // Render the movies data using the named template: "summaryTemplate"
  $.tmpl( "summaryTemplate", movies ).appendTo( "#moviesList" );
}
</pre>

<p>
<strong>Example:</strong> Use the return value rather than the <code>name</code> string to reference the compiled template:
</p>

<pre>
&lt;script id="titleTemplate" type="text/x-jquery-tmpl"&gt;
  &lt;li&gt;${Name}&lt;/li&gt;
&lt;/script&gt;
___________

// Compile the inline template as a named template
var myTemplate = $( "#titleTemplate" ).template();

function renderList() {
  // Render movies data using the compiled template: myTemplate
  $.tmpl( myTemplate, movies ).appendTo( "#moviesList" );
}
</pre>
<p>
<strong>Example:</strong> Create a named template and reference it by name as a nested template: 
</p>
<pre>
&lt;script id="movieTemplate" type="text/x-jquery-tmpl"&gt;
  {{tmpl "summaryTemplate"}}
  &lt;tr&gt;&lt;td&gt;Director: ${Director}&lt;/td&gt;&lt;/tr&gt;
&lt;/script&gt;

&lt;script id="titleTemplate" type="text/x-jquery-tmpl"&gt;
  &lt;tr&gt;&lt;td&gt;${Name}&lt;/td&gt;&lt;/tr&gt;
&lt;/script&gt;
___________

// Compile the titleTemplate template as a named template
// referenced by the {{tmpl}} tag
$( "#titleTemplate" ).template( "summaryTemplate" );

// Render the movies data using the named template as a nested template
$( "#movieTemplate" ).tmpl( movies ).appendTo( "#movieList" );
</pre>
<p>
<strong>Example:</strong> Switch the template item to a different template, using <code>.template()</code> to obtain compiled template:
</p>
<pre>
&lt;script id="summaryTemplate" type="text/x-jquery-tmpl"&gt;
  &lt;tr&gt;...&lt;/tr&gt;
&lt;/script&gt;

&lt;script id="detailTemplate" type="text/x-jquery-tmpl"&gt;
  &lt;tr&gt;...&lt;/tr&gt;
&lt;/script&gt;
___________

// Render the summaryTemplate with the "movies" data 
$( "#summaryTemplate" ).tmpl( movies ).appendTo( "#movieList" );

$( "tr" ).click( function () {
  // Switch the template for this template item to
  // a different named template, then update the rendered item
  var tmplItem = $.tmplItem(this);
  tmplItem.tmpl = $( "#detailTemplate" ).template();
  tmplItem.update();
});
</pre>


</longdesc>

<example>
<desc>Dynamic switching of templates, using .template() to obtain compiled template.</desc>
<js src="http://code.jquery.com/jquery-latest.min.js" /> 
<js src="http://ajax.microsoft.com/ajax/jquery.templates/beta1/jquery.tmpl.min.js" /> 
<code><![CDATA[
var movies = [
  { Name: "The Red Violin", ReleaseYear: "1998", Director: "FranÃ§ois Girard" },
  { Name: "Eyes Wide Shut", ReleaseYear: "1999", Director: "Stanley Kubrick" },
  { Name: "The Inheritance", ReleaseYear: "1976", Director: "Mauro Bolognini" }
];
var selectedItem = null;

/* Render the summaryTemplate with the "movies" data */ 
$( "#summaryTemplate" ).tmpl( movies ).appendTo( "#movieList" );

$("#movieList")
.delegate( ".movieSummary", "click", function () {
  if (selectedItem) {
    /* Switch previously selected item back to the summaryTemplate */ 
    selectedItem.tmpl = $( "#summaryTemplate" ).template();

    /* Update rendering of previous selected item */ 
    selectedItem.update();
  }

  /* Make this the selected item  */
  selectedItem = $.tmplItem(this);

  /* Switch this template item to the detailTemplate */ 
  selectedItem.tmpl = $( "#detailTemplate" ).template();

  /* Refresh rendering */ 
  selectedItem.update();
})
.delegate( ".movieDetail", "click", function () {
  /* Unselect - switch to the summaryTemplate */ 
  selectedItem.tmpl = $( "#summaryTemplate" ).template();

  /* Refresh rendering */ 
  selectedItem.update();

  selectedItem = null;
});
]]></code>
<css><![CDATA[
  table { cursor:pointer; border-collapse:collapse; border:2px solid blue; width:300px; margin:8px; }
  table tr { border:1px solid blue; color:blue; background-color:#f8f8f8; } 
  table td { padding:3px; } table tr:hover { color:red; }
  .movieDetail { background-color:yellow; } 
  .movieDetail.row1 { border-bottom:none; } .movieDetail.row2 { border-top:none; }
]]></css>
<html><![CDATA[
<tmpl id="summaryTemplate" type="text/x-jquery-tmpl">
  <tr class='movieSummary'><td colspan='2'>${Name}</td></tr>
</tmpl>

<tmpl id="detailTemplate" type="text/x-jquery-tmpl">
  <tr class='movieDetail row1'><td colspan='2'>${Name}</td></tr><tr class='movieDetail row2'><td>${ReleaseYear}</td><td>Director: ${Director}</td></tr>
</tmpl>

Click for details:
<table><tbody id="movieList"></tbody></table>
]]></html>
</example>
</entry>