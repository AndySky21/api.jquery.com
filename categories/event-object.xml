<category id="66" parent="11" name="Event Object" slug="event-object">
  <desc><p>jQuery's event system normalizes the event object according to <a href="http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html">W3C standards</a>. The event object is guaranteed to be passed to the event handler. Most properties from the original event are copied over and normalized to the new event object.</p>

<div class="longdesc">
<h4>jQuery.Event Constructor</h4>
<p>The <code>jQuery.Event</code> constructor is exposed and can be used when calling <a href="/trigger">trigger</a>. The <code>new</code> operator is optional.</p>
<p>Check <a href="/trigger">trigger</a>'s documentation to see how to combine it with your own event object.</p>

<p>Example:</p>
  <pre><code>  //Create a new jQuery.Event object without the "new" operator.
  var e = jQuery.Event("click");

  // trigger an artificial click event
  jQuery("body").trigger( e );
  </code></pre>

<p>As of jQuery 1.6, you can also pass an object to <code>jQuery.Event()</code> and its properties will be set on the newly created Event object.</p>

<p>Example:</p>
  <pre><code>  // Create a new jQuery.Event object with specified event properties.
  var e = jQuery.Event("keydown", { keyCode: 64 });

  // trigger an artificial keydown event with keyCode 64
  jQuery("body").trigger( e );
  </code></pre>

<h4>Event Properties</h4>

<p>jQuery normalizes the following properties for cross-browser consistency:</p>
<ul>
  <li><code>target</code></li>
  <li><code>relatedTarget</code></li>
  <li><code>pageX</code></li>
  <li><code>pageY</code></li>
  <li><code>which</code></li>
  <li><code>metaKey</code></li>
</ul>

<p>The following properties are also copied to the event object, though some of their values may be undefined depending on the event:</p>

<p>altKey, bubbles, button, cancelable, charCode, clientX, clientY, ctrlKey, currentTarget, data, detail, eventPhase, metaKey, offsetX, offsetY, originalTarget, pageX, pageY, prevValue, relatedTarget, screenX, screenY, shiftKey, target, view, which</p>

<h4>OtherProperties</h4>
<p>Certain events may have properties specific to them. Those can be accessed as properties of the <code>event.originalEvent</code> object. To make special properties available in all event objects, they can be added to the <code>jQuery.event.props</code> array. This is not recommended, since it adds overhead to every event delivered by jQuery.</p>

<p>Example:</p>
<pre><code>
// add the dataTransfer property for use with the native `drop` event
// to capture information about files dropped into the browser window
jQuery.event.props.push("dataTransfer");
</code></pre>
</div></desc>
</category>
